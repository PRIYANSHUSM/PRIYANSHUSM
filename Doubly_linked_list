class Node:
    def __init__(self,data):
        self.data = data
        self.prev = None
        self.next = None
        
class Doubly_lnk_lst:
    def __init__(self):
        self.head = None
        
    def push(self,data):
        newNode = Node(data)
        newNode.next = self.head
        if self.head is not None:
            self.head.prev = newNode
        self.head = newNode
        
    def find_node(self,data):
        node = self.head
        while node:
            if node.data == data:
                return node
            else:
                node= node.next
                
        return None
        
    def insert(self,prev,data):
        prev = self.find_node(prev)
        if prev is None:
            return
        newNode = Node(data)
        newNode.next = prev.next
        newNode.prev = prev
        prev.next = newNode
        if newNode.next is not None:
            newNode.next.prev = newNode
        
        
        
    def print_list(self):
        if self.head:
            node = self.head
            while node:
                print(node.data)
                node = node.next
                
        else:
            print("No data exist")
            
            
doubly = Doubly_lnk_lst()
doubly.push(1)
doubly .push(2)
doubly.insert(1,3)
doubly.print_list()
